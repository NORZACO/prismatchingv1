generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  super_content_types        super_content_types          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_super_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  bloge_post                 bloge_post[]
  super_admin_log            super_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

model bloge_category {
  id                  BigInt                @id @default(autoincrement())
  name                String                @unique @db.VarChar(256)
  images              String                @db.VarChar(100)
  bloge_post_category bloge_post_category[]

  @@index([name], map: "bloge_category_name_622226f3_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model bloge_post {
  id                  BigInt                @id @default(autoincrement())
  title               String                @unique @db.VarChar(200)
  images              String                @db.VarChar(100)
  updated_on          DateTime              @db.Timestamptz(6)
  content             String
  created_on          DateTime              @db.Timestamptz(6)
  status              Int
  author_id           Int
  auth_user           auth_user             @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bloge_post_author_id_0c14791b_fk_auth_user_id")
  bloge_post_category bloge_post_category[]

  @@index([author_id], map: "bloge_post_author_id_0c14791b")
  @@index([title], map: "bloge_post_title_615a6b6f_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model bloge_post_category {
  id             BigInt         @id @default(autoincrement())
  post_id        BigInt
  category_id    BigInt
  bloge_category bloge_category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bloge_post_category_category_id_e8e5c09c_fk_bloge_category_id")
  bloge_post     bloge_post     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bloge_post_category_post_id_482e9075_fk_bloge_post_id")

  @@unique([post_id, category_id], map: "bloge_post_category_post_id_category_id_92aacc6c_uniq")
  @@index([category_id], map: "bloge_post_category_category_id_e8e5c09c")
  @@index([post_id], map: "bloge_post_category_post_id_482e9075")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model super_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  super_content_types super_content_types? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "super_admin_log_content_type_id_c4bce8eb_fk_super_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "super_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "super_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "super_admin_log_user_id_c564eba6")
}

model super_content_types {
  id              Int               @id @default(autoincrement())
  app_label       String            @db.VarChar(100)
  model           String            @db.VarChar(100)
  auth_permission auth_permission[]
  super_admin_log super_admin_log[]

  @@unique([app_label, model], map: "super_content_types_app_label_model_76bd3d3b_uniq")
}

model django_content_type {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(100)
  app_label String @db.VarChar(100)
  model     String @db.VarChar(100)

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}
